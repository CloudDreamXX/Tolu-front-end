import { HealthHistory, HealthHistoryPostData } from "entities/health-history";
import z from "zod";

export const baseSchema = z.object({
  age: z.string(),
  maritalStatus: z.string(),
  job: z.string(),
  children: z.string(),
  location: z.string(),
  religion: z.string(),
  financialStatus: z.string(),
  genderAssignedAtBirth: z.string(),
  genderIdentity: z.string(),

  menopauseStatus: z.string(),
  mainSymptoms: z.string(),
  symptomTracking: z.string(),
  trackingDevice: z.string(),
  biggestChallenge: z.string(),
  successManaging: z.string(),

  diagnosedConditions: z.string(),
  geneticTraits: z.string(),
  maternalSide: z.string(),
  medications: z.string(),

  lifestyleInfo: z.string(),
  takeout: z.string(),
  homeCooked: z.string(),
  dietType: z.string(),
  exercise: z.string(),
  sexLife: z.string(),
  supportSystem: z.string(),

  goals: z.string(),
});

export const mapHealthHistoryToFormDefaults = (
  healthHistory?: HealthHistory
) => {
  return {
    age: healthHistory?.age?.toString() ?? "",
    maritalStatus: healthHistory?.marital_status ?? "",
    job: healthHistory?.job ?? "",
    children: healthHistory?.no_children ?? "",
    menopauseStatus: healthHistory?.menopause_status ?? "",
    otherChallenges: healthHistory?.other_challenges ?? "",
    strategiesTried: healthHistory?.tried_strategies ?? "",
    diagnosedConditions: healthHistory?.diagnosed_conditions ?? "",
    geneticTraits: healthHistory?.genetic_traits ?? "",
    maternalSide: healthHistory?.family_health_history ?? "",
    paternalSide: healthHistory?.support_system ?? "",
    notableConcern: healthHistory?.family_health_history ?? "",
    stressLevel: healthHistory?.stress_levels ?? "",
    takeout: healthHistory?.takeout_food ?? "",
    homeCooked: healthHistory?.cook_at_home ?? "",
    dietType: healthHistory?.specific_diet ?? "",
    exercise: healthHistory?.exercise_habits ?? "",
    limitations: healthHistory?.lifestyle_limitations ?? "",
    medications: healthHistory?.medications ?? "",
    period: healthHistory?.menstrual_cycle_status ?? "",
    sexLife: healthHistory?.sex_life ?? "",
    supportSystem: healthHistory?.support_system ?? "",
    goals: healthHistory?.health_goals ?? "",
    gender: healthHistory?.gender ?? "",
    height: healthHistory?.height ?? "",
    weight: healthHistory?.weight ?? "",
    supplements: healthHistory?.supplements ?? "",
    allergies: healthHistory?.allergies_intolerances ?? "",
    dietPattern: healthHistory?.diet_pattern ?? "",
    kindOfFood: healthHistory?.kind_of_food ?? "",
    eatDecision: healthHistory?.eat_decision ?? "",
    sleepQuality: healthHistory?.sleep_quality ?? "",
    energyLevels: healthHistory?.energy_levels ?? "",
    hormoneTherapy: healthHistory?.hormone_replacement_therapy ?? "",
    fertilityConcerns: healthHistory?.fertility_concerns ?? "",
    birthControlUse: healthHistory?.birth_control_use ?? "",
    bloodSugarConcerns: healthHistory?.blood_sugar_concerns ?? "",
    digestiveIssues: healthHistory?.digestive_issues ?? "",
    recentLabTests: healthHistory?.recent_lab_tests ?? false,
    labResultsFile: healthHistory?.lab_results_file ?? [],
    whyGoals: healthHistory?.why_these_goals ?? "",
    resultTimeline: healthHistory?.desired_results_timeline ?? "",
    healthApproach: healthHistory?.health_approach_preference ?? "",
    privacyConsent: healthHistory?.privacy_consent ?? false,
    followUpRecommendation: healthHistory?.follow_up_recommendation ?? "",
    recommendationDestination: healthHistory?.recommendation_destination ?? "",
  };
};

export const mapFormToPostData = (
  formValues: z.infer<typeof baseSchema>
): HealthHistoryPostData => ({
  age: parseInt(formValues.age ?? "0", 10),
  marital_status: formValues.maritalStatus,
  job: formValues.job,
  no_children: formValues.children,
  // location: formValues.location,
  // religion: formValues.religion,
  // financial_status: formValues.financialStatus,
  gender: formValues.genderAssignedAtBirth,
  // gender_identity: formValues.genderIdentity,
  menopause_status: formValues.menopauseStatus,
  current_health_concerns: formValues.mainSymptoms,
  // symptom_tracking: formValues.symptomTracking,
  // tracking_device: formValues.trackingDevice,
  // biggest_challenge: formValues.biggestChallenge,
  // success_managing: formValues.successManaging,
  diagnosed_conditions: formValues.diagnosedConditions,
  // genetic_traits: formValues.geneticTraits,
  maternal_health_history: formValues.maternalSide,
  medications: formValues.medications,

  lifestyle_information: formValues.lifestyleInfo,
  takeout_food: formValues.takeout,
  cook_at_home: formValues.homeCooked,
  specific_diet: formValues.dietType,
  exercise_habits: formValues.exercise,
  sex_life: formValues.sexLife,
  support_system: formValues.supportSystem,

  health_goals: formValues.goals,

  height: "",
  weight: "",
  supplements: "",
  allergies_intolerances: "",
  eat_decision: "",
  kind_of_food: "",
  diet_pattern: "",
  sleep_quality: "",
  stress_levels: "",
  energy_levels: "",
  hormone_replacement_therapy: "",
  fertility_concerns: "",
  birth_control_use: "",
  blood_sugar_concerns: "",
  digestive_issues: "",
  recent_lab_tests: false,
  why_these_goals: "",
  desired_results_timeline: "",
  health_approach_preference: "",
  privacy_consent: true,
  follow_up_recommendation: "",
  recommendation_destination: "",
  other_challenges: "",
  tried_strategies: "",
  paternal_health_history: "",
  family_health_history: "",
  lifestyle_limitations: "",
  menstrual_cycle_status: "",
  gender_identity: "",
  location: "",
  language: "",
  ethnicity: "",
  household: "",
  education: "",
  religion: "",
});
